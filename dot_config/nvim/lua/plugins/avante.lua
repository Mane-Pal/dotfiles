return {}
--  {
--    "yetone/avante.nvim",
--    --dir = vim.fn.expand("$HOME/git/public_repos/avante.nvim"), -- Point to local dev directory
--    --dev = false,
--    --debug = false,
--    event = "VeryLazy",
--    build = "make",
--    init = function()
--      _G.convert_to_qf = function()
--        require("avante.diff").conflicts_to_qf_items(function(items)
--          if #items > 0 then
--            vim.fn.setqflist(items, "r")
--            vim.cmd("copen")
--          end
--        end)
--      end
--    end,
--    opts = {
--      provider = "copilot",
--      copilot = { model = "claude-3.5-sonnet" },
--      hints = { enabled = false },
--      claude = {
--        endpoint = "https://api.anthropic.com",
--        model = "claude-3-5-sonnet-20241022",
--        temperature = 0,
--        max_tokens = 4096,
--      },
--      sidebar = {
--        start_in_insert_mode = false,
--      },
--      file_selector = {
--        provider = "snacks",
--        provider_opts = {},
--      },
--      rag_service = {
--        enabled = false, -- Enable the RAG service
--        runner = "podman",
--        --docker_extra_args = "--user 1000:1000",
--      },
--      web_search_engine = {
--        provider = "tavily",
--        providers = {
--          tavily = {
--            api_key_name = "TAVILY_API_KEY",
--            extra_request_body = {
--              include_answer = "basic",
--            },
--            ---@type WebSearchEngineProviderResponseBodyFormatter
--            format_response_body = function(body)
--              if body and body.answer then
--                return body.answer, nil
--              end
--              return "No answer found", nil
--            end,
--          },
--        },
--      },
--    },
--  },
--
--  {
--    "folke/which-key.nvim",
--    optional = true,
--    opts = {
--      spec = {
--        { "<leader>a", group = "ai" },
--        { "<leader>aq", "<cmd>lua _G.convert_to_qf()<CR>", desc = "Push diffs to quickfix" },
--      },
--    },
--  },
--
--  {
--    "stevearc/dressing.nvim",
--    lazy = true,
--    -- disable to use vim.ui.input and vim.ui.select from Snacks.input
--    opts = { input = { enabled = false }, select = { enabled = false } },
--  },
--
--  {
--    "MeanderingProgrammer/render-markdown.nvim",
--    optional = true,
--    ft = function(_, ft)
--      vim.list_extend(ft, { "Avante" })
--    end,
--  },
--
--  -- nvim-cmp compatibility layer for Avante
--  {
--    "saghen/blink.compat",
--    lazy = true,
--    opts = {},
--    config = function()
--      require("cmp").ConfirmBehavior = { Insert = "insert", Replace = "replace" }
--    end,
--  },
--  {
--    "saghen/blink.cmp",
--    lazy = true,
--    opts = {
--      sources = {
--        default = { "avante_commands", "avante_mentions", "avante_files" },
--        compat = {
--          "avante_commands",
--          "avante_mentions",
--          "avante_files",
--        },
--        providers = {
--          -- LSP is typically ~60
--          avante_commands = {
--            name = "avante_commands",
--            module = "blink.compat.source",
--            score_offset = 90, -- show at a higher priority than lsp
--            opts = {},
--          },
--          avante_files = {
--            name = "avante_files",
--            module = "blink.compat.source",
--            score_offset = 100, -- ~40 points higher than LSP ()
--            opts = {},
--          },
--          avante_mentions = {
--            name = "avante_mentions",
--            module = "blink.compat.source",
--            score_offset = 1000, -- show at a higher priority than lsp
--            opts = {},
--          },
--        },
--      },
--    },
--  },
--}
